apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: YOUR_RELEASE_NAME
    meta.helm.sh/release-namespace: default
  labels:
    app: graphite
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: graphite
    app.kubernetes.io/version: 1.1.0
  name: graphite
  namespace: graphite
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: graphite
  serviceName: graphite
  template:
    metadata:
      labels:
        app: graphite
    spec:
      containers:
        - envFrom:
            - secretRef:
                name: graphite
                optional: false
          image: YOUR.REPO.COM/graphite/graphite-ubuntu:1.1.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics/find?query=*
              port: liveness-port
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 2
          name: graphite
          ports:
            - containerPort: 2003
              hostPort: 2003
              name: carbon
              protocol: TCP
            - containerPort: 80
              name: liveness-port
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics/find?query=*
              port: liveness-port
            periodSeconds: 2
            successThreshold: 2
            timeoutSeconds: 2
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /metrics/find?query=*
              port: liveness-port
            periodSeconds: 10
          resources:
            requests:
              memory: 360Mi
            limits:
              memory: 1024Mi
          securityContext:
            allowPrivilegeEscalation: true
            capabilities: {}
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /var/log
              name: logs
            - mountPath: /var/run/secrets
              name: graphite-secrets
            - mountPath: /storage
              name: graphite-storage
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: YOUR-ARTIFACT-REPOSITORY-SECRET
      initContainers:
        - command:
            - /bin/sh
            - -c
            - chown -R 101:102 /mnt/storage /mnt/logs ; chmod 775 /mnt/storage /mnt/logs ; ls -ld /mnt/storage ; ls -ld /mnt/logs
          image: busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: storage-volume-rights
          resources: {}
          securityContext:
            capabilities: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /mnt/storage
              name: graphite-storage
            - mountPath: /mnt/logs
              name: logs
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: logs
          hostPath:
            path: /app/util/graphite/logs
            type: DirectoryOrCreate
        - name: graphite-secrets
          secret:
            defaultMode: 256
            optional: false
            secretName: graphite
        - name: graphite-storage
          persistentVolumeClaim:
            claimName: graphite
  updateStrategy:
    type: RollingUpdate
